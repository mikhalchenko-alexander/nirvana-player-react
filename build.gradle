group 'com.anahoret'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.50'
    ext.kotlinx_html_js_version = '0.6.4'

    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'gradle.plugin.com.craigburke.gradle:karma-gradle:1.4.4'
    }
}

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'com.craigburke.karma'

repositories {
    jcenter()
    maven { url "http://dl.bintray.com/kotlin/kotlinx.html" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_js_version"

    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

compileKotlin2Js {
    kotlinOptions.moduleKind = "umd"
    kotlinOptions.sourceMap = true
}

compileTestKotlin2Js {
    kotlinOptions.moduleKind = "umd"
}

task buildBundleMin(type: NpmTask, dependsOn: [npmInstall, runDceKotlinJs]) {
    inputs.files 'src'
    args = ["run", "bundleMin"]
}

task buildBundle(type: NpmTask, dependsOn: [npmInstall, compileKotlin2Js]) {
    inputs.files 'src'
    args = ["run", "bundle"]
}

node {
    download = true
}

def libDir = "$buildDir/lib"
def compileOutput = compileKotlin2Js.outputFile
def testOutput = compileTestKotlin2Js.outputFile

task populateNodeModules(type: Copy, dependsOn: [npmInstall, compileKotlin2Js]) {
    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    from files(
        'node_modules/react/dist/react.js',
        'node_modules/react-dom/dist/react-dom.js'
    )

    into libDir
}

karma {
    files = [
        "$libDir/kotlin.js",
        "$libDir/react.js",
        "$libDir/react-dom.js",
        "$libDir/*.js",
        compileOutput,
        testOutput
    ]
    colors = true
    profile 'default'

    browsers = ['Chrome']
    frameworks = ['jasmine']
}

karmaRun {
    dependsOn compileTestKotlin2Js
    dependsOn populateNodeModules
}

test.dependsOn karmaRun
clean.dependsOn karmaClean
